{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juang\\\\Desktop\\\\fe3-final\\\\src\\\\Routes\\\\Detail.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState, useContext } from 'react'; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Detail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    state\n  } = useContext();\n  const [dentista, setDentista] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n      const data = await response.json();\n      setDentista(data);\n    }\n\n    fetchData();\n  }, [id]); // Consumiendo el parametro dinamico de la URL deberan hacer un fetch a un user en especifico\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"N\\xFAmero: \", dentista.id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nombre: \", dentista.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", dentista.img]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Detail, \"XmyvpGJwFos/qYykV/8Lr68RQE4=\", false, function () {\n  return [useParams];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useParams","useEffect","useState","useContext","Detail","id","state","dentista","setDentista","fetchData","response","fetch","data","json","name","img"],"sources":["C:/Users/juang/Desktop/fe3-final/src/Routes/Detail.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport {useEffect, useState, useContext} from 'react';\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Detail = () => {\r\n  const {id} = useParams();\r\n  const {state} = useContext();\r\n  const [dentista, setDentista] = useState();\r\n\r\nuseEffect(() => {\r\n  async function fetchData() {\r\n    const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    const data = await response.json();\r\n    setDentista(data);\r\n  }\r\n  fetchData();\r\n}, [id])\r\n  // Consumiendo el parametro dinamico de la URL deberan hacer un fetch a un user en especifico\r\n\r\n  return (\r\n    <>\r\n      <h1>NÃºmero: {dentista.id} </h1>\r\n      <p>Nombre: {dentista.name}</p>\r\n      <p>Email: {dentista.img}</p>\r\n      {/* aqui deberan renderizar la informacion en detalle de un user en especifico */}\r\n      {/* Deberan mostrar el name - email - phone - website por cada user en especifico */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Detail"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA8C,OAA9C,C,CAEA;;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM;IAACC;EAAD,IAAOL,SAAS,EAAtB;EACA,MAAM;IAACM;EAAD,IAAUH,UAAU,EAA1B;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;EAEFD,SAAS,CAAC,MAAM;IACd,eAAeQ,SAAf,GAA2B;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CN,EAAG,EAAlD,CAA5B;MACA,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAL,WAAW,CAACI,IAAD,CAAX;IACD;;IACDH,SAAS;EACV,CAPQ,EAON,CAACJ,EAAD,CAPM,CAAT,CALqB,CAanB;;EAEA,oBACE;IAAA,wBACE;MAAA,0BAAaE,QAAQ,CAACF,EAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBAAYE,QAAQ,CAACO,IAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,sBAAWP,QAAQ,CAACQ,GAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AASD,CAxBD;;GAAMX,M;UACSJ,S;;;KADTI,M;AA0BN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}