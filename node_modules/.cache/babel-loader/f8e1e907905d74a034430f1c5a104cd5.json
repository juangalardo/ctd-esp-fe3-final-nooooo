{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juang\\\\Desktop\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer, useMemo, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"claro\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nconst setTheme = \"setTheme\";\nconst setDataApi = \"setDataApi\";\nconst toggleTheme = \"toggleTheme\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case setTheme:\n      return { ...state,\n        theme: action.payload\n      };\n\n    case setDataApi:\n      return { ...state,\n        data: action.payload\n      };\n\n    case toggleTheme:\n      return { ...state,\n        theme: state.theme === \"claro\" ? \"oscuro\" : \"claro\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n        const data = await response.json();\n        dispatch({\n          type: setDataApi,\n          payload: data\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const contextValue = useMemo(() => ({\n    theme: state.theme,\n    data: state.data,\n    toggleTheme: () => dispatch({\n      type: toggleTheme\n    })\n  }), [state.data, state.theme]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"1hLxNn5oipVjGNThoOX55kaYYoY=\");\n\n_c = ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","useMemo","useContext","initialState","theme","data","ContextGlobal","undefined","setTheme","setDataApi","toggleTheme","reducer","state","action","type","payload","ContextProvider","children","dispatch","fetchData","response","fetch","json","error","console","log","contextValue","useContextGlobal"],"sources":["C:/Users/juang/Desktop/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useEffect, useReducer, useMemo, useContext } from \"react\";\r\n\r\nexport const initialState = {theme: \"claro\", data: []}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nconst setTheme = \"setTheme\";\r\nconst setDataApi = \"setDataApi\";\r\nconst toggleTheme = \"toggleTheme\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case setTheme:\r\n      return {\r\n        ...state,\r\n        theme: action.payload\r\n      };\r\n    case setDataApi:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      };\r\n    case toggleTheme:\r\n      return {\r\n        ...state,\r\n        theme: state.theme === \"claro\" ? \"oscuro\" : \"claro\"\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport const ContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n        const data = await response.json();\r\n        dispatch({ type: setDataApi, payload: data });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const contextValue = useMemo (() => ({\r\n    theme: state.theme,\r\n    data: state.data,\r\n    toggleTheme: () => dispatch({ type: toggleTheme }),\r\n  }), [state.data, state.theme]);\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={ contextValue }>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\nexport const useContextGlobal = () => useContext(ContextGlobal)"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,EAA+CC,OAA/C,EAAwDC,UAAxD,QAA0E,OAA1E;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,OAAR;EAAiBC,IAAI,EAAE;AAAvB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGR,aAAa,CAACS,SAAD,CAAnC;AAEP,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,QAAL;MACE,OAAO,EACL,GAAGI,KADE;QAELR,KAAK,EAAES,MAAM,CAACE;MAFT,CAAP;;IAIF,KAAKN,UAAL;MACE,OAAO,EACL,GAAGG,KADE;QAELP,IAAI,EAAEQ,MAAM,CAACE;MAFR,CAAP;;IAIF,KAAKL,WAAL;MACE,OAAO,EACL,GAAGE,KADE;QAELR,KAAK,EAAEQ,KAAK,CAACR,KAAN,KAAgB,OAAhB,GAA0B,QAA1B,GAAqC;MAFvC,CAAP;;IAIF;MACE,OAAOQ,KAAP;EAjBJ;AAmBD,CApBD;;AAqBA,OAAO,MAAMI,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBlB,UAAU,CAACW,OAAD,EAAUR,YAAV,CAApC;EAEAJ,SAAS,CAAC,MAAM;IAEd,MAAMoB,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;QACA,MAAMhB,IAAI,GAAG,MAAMe,QAAQ,CAACE,IAAT,EAAnB;QACAJ,QAAQ,CAAC;UAAEJ,IAAI,EAAEL,UAAR;UAAoBM,OAAO,EAAEV;QAA7B,CAAD,CAAR;MACD,CAJD,CAIE,OAAOkB,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF,CARD;;IASAJ,SAAS;EACV,CAZQ,EAYN,EAZM,CAAT;EAcA,MAAMO,YAAY,GAAGzB,OAAO,CAAE,OAAO;IACnCG,KAAK,EAAEQ,KAAK,CAACR,KADsB;IAEnCC,IAAI,EAAEO,KAAK,CAACP,IAFuB;IAGnCK,WAAW,EAAE,MAAMQ,QAAQ,CAAC;MAAEJ,IAAI,EAAEJ;IAAR,CAAD;EAHQ,CAAP,CAAF,EAIxB,CAACE,KAAK,CAACP,IAAP,EAAaO,KAAK,CAACR,KAAnB,CAJwB,CAA5B;EAMA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAGsB,YAAhC;IAAA,UACGT;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA5BM;;GAAMD,e;;KAAAA,e;AA8Bb,OAAO,MAAMW,gBAAgB,GAAG;EAAA;;EAAA,OAAMzB,UAAU,CAACI,aAAD,CAAhB;AAAA,CAAzB;;IAAMqB,gB"},"metadata":{},"sourceType":"module"}